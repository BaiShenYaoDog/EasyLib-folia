plugins {
    id 'java'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.9.20'
    id("com.github.johnrengelman.shadow") version("7.1.2")
}

def kotlinVersion = "1.9.20"

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    group = 'com.xbaimiao'
    version = '3.6.3'

    repositories {
        mavenCentral()
        maven { url 'https://repo.aikar.co/content/groups/aikar/' }
        maven { url "https://repo.dmulloy2.net/repository/public/" }
        maven { url "https://repo.tabooproject.org/repository/releases/" }
        maven { url "https://repo.papermc.io/repository/maven-public/" }
        maven { url "https://repo.papermc.io/repository/maven-snapshots/" }
        maven { url "https://repo.codemc.org/repository/maven-public/" }
    }

    dependencies {
        compileOnly("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
        compileOnly("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
        compileOnly("com.zaxxer:HikariCP:4.0.3")
        compileOnly("com.comphenix.protocol:ProtocolLib:4.7.0")
        compileOnly("net.luckperms:api:5.4")
        compileOnly("redis.clients:jedis:5.0.1")
        compileOnly("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3")
        compileOnly("com.j256.ormlite:ormlite-core:6.1")
        compileOnly("com.j256.ormlite:ormlite-jdbc:6.1")
    }

    compileKotlin {
        kotlinOptions.jvmTarget = '1.8'
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = '1.8'
    }

}

dependencies {
    def reflexVersion = "1.0.19"
    compileOnly("net.kyori:adventure-api:4.13.1")
    compileOnly("com.zaxxer:HikariCP:4.0.3")
    compileOnly("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3")
    compileOnly("com.google.code.gson:gson:2.10.1")
    compileOnly("com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT")
    compileOnly("com.mojang:authlib:1.5.25")
    compileOnly(fileTree("libs"))

    // reflex
    implementation("org.tabooproject.reflex:analyser:${reflexVersion}")
    implementation("org.tabooproject.reflex:fast-instance-getter:${reflexVersion}")
    implementation("org.tabooproject.reflex:reflex:${reflexVersion}") // 需要 analyser 模块

    // asm
    implementation("org.ow2.asm:asm:9.2")
    implementation("org.ow2.asm:asm-util:9.2")
    implementation("org.ow2.asm:asm-commons:9.2")
    implementation("com.github.cryptomorin:XSeries:9.9.0")
    implementation(project(":easylib-api"))
    implementation(project(":easylib-folia"))
    implementation(project(":easylib-bukkit"))
}

task copyDependencies(type: Copy) {
    from configurations.compileClasspath
    subprojects.forEach {
        from it.configurations.compileClasspath
    }
    into 'dependencies'
}

tasks.register('sourcesJar', Jar) {
    it.group("build")
    classifier = 'sources'
    subprojects {
        from sourceSets.main.allSource
    }
    from sourceSets.main.allSource
}

tasks {
    build {
        artifacts {
            archives(shadowJar)
            archives(sourcesJar)
        }
    }
    assemble {
        dependsOn(clean)
    }
    shadowJar {
        classifier = ''
        dependencies {
            exclude(dependency("org.jetbrains.kotlin:"))
            exclude(dependency("org.jetbrains:"))
            exclude(dependency("org.jetbrains.kotlinx:"))
        }
        relocate("org.wltea.expression", "com.xbaimiao.easylib.expression")
        relocate("com.cryptomorin.xseries", "com.xbaimiao.easylib.xseries")
        relocate("org.tabooproject.reflex", "com.xbaimiao.easylib.reflex")
        relocate("org.objectweb.asm", "com.xbaimiao.easylib.asm")
    }
    // UTF-8
    compileJava {
        options.encoding = "UTF-8"
    }
}

publishing {
    repositories {
        maven {
            credentials {
                username = project.findProperty("clayUsername").toString()
                password = project.findProperty("clayPassword").toString()
            }
            url("https://maven.mineclay.com/repository/zhua-release/")
        }
        maven {
            credentials {
                username = project.findProperty("githubUsername").toString()
                password = project.findProperty("githubPassword").toString()
            }
            name = "GithubPackages"
            url = uri("https://maven.pkg.github.com/xbaimiao/EasyLib")
        }
    }
    publications {
        gpr(MavenPublication) {
            artifact sourcesJar
            artifact shadowJar
            artifactId = 'easy-lib'
        }
    }
}
